source ./installation_scripts/impl_unset_keys.sh
export ROOTDIR=$PWD

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# -----------------------  OPTIONS FOR SYSTEM INSTALLATION -------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

#  ---------------------------------------------------------------------------
# HOW COCOA BE INSTALLED? -------------------------------

#export DOCKER_INSTALLATION=1
export MINICONDA_INSTALLATION=1
#export MANUAL_INSTALLATION=1

# deprecated Keys - will be deleted in the future
#export AMYPOND_SUPERCOMPUTER_INSTALLATION=1
#export PUMA_SUPERCOMPUTER_INSTALLATION=1

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# -------------------------------  OPTIONAL OPTIONS --------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# SETUP_REQUIRED_PACKAGES SCRIPT MAY TAKE A LONG TIME - THREADING W/ 8 CORES

export THREAD_UNXZ=1
export MAKE_NUM_THREADS=12

# ----------------------------------------------------------------------------
# CONTROL OVER EXTERNAL CODES ON SETUP_COCOA SCRIPT -------------------------

#export IGNORE_CAMB_COMPILATION=1
#export IGNORE_CLASS_COMPILATION=1
#export IGNORE_COSMOLIKE_COMPILATION=1
#export IGNORE_POLYCHORD_COMPILATION=1
#export IGNORE_PLANCK_COMPILATION=1

# ----------------------------------------------------------------------------
# IF DEFINED, COSMOLIKE WILL BE COMPILED WITH DEBUG FLAG
#   DEBUG FLAG = ALL COMPILER WARNINGS + NO MATH OPTIMIZATION + NO OPENMP
#export COSMOLIKE_DEBUG_MODE=1

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# --------------------------- DERIVED OPTIONS  -------------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

if [ -n "${MANUAL_INSTALLATION}" ]; then

    export GLOBAL_PACKAGES_LOCATION=/usr/local
    export PYTHON_VERSION=3
    export FORTRAN_COMPILER=gfortran
    
    export C_COMPILER=gcc
    export CXX_COMPILER=g++
    export GLOBALPYTHON3=python3
    export MPI_FORTRAN_COMPILER=mpif90
    export MPI_CXX_COMPILER=mpicc
    export MPI_CC_COMPILER=mpicxx

    #export DONT_USE_SYSTEM_PIP_PACKAGES=1
    
    # ---------------------------------------
    # In case global packages are available 
    # ---------------------------------------
    #export IGNORE_DISTUTILS_INSTALLATION=1
    #export IGNORE_OPENBLAS_INSTALLATION=1
    #export IGNORE_XZ_INSTALLATION=1
    #export IGNORE_ALL_PIP_INSTALLATION=1
    #export IGNORE_CMAKE_INSTALLATION=1
    #export IGNORE_CPP_BOOST_INSTALLATION=1
    #export IGNORE_CPP_ARMA_INSTALLATION=1
    #export IGNORE_CPP_SPDLOG_INSTALLATION=1
    #export IGNORE_C_GSL_INSTALLATION=1
    #export IGNORE_C_CFITSIO_INSTALLATION=1
    #export IGNORE_C_FFTW_INSTALLATION=1
    #export IGNORE_OPENBLAS_INSTALLATION=1
    #export IGNORE_FORTRAN_LAPACK_INSTALLATION=1

elif [ -n "${DOCKER_INSTALLATION}" ]; then

    export GLOBAL_PACKAGES_LOCATION=/usr/local
    export PYTHON_VERSION=3
    export FORTRAN_COMPILER=gfortran
    
    export C_COMPILER=gcc
    export CXX_COMPILER=g++
    export GLOBALPYTHON3=python3
    export MPI_FORTRAN_COMPILER=mpif90
    export MPI_CXX_COMPILER=mpicc
    export MPI_CC_COMPILER=mpicxx

    export IGNORE_DISTUTILS_INSTALLATION=1
    export IGNORE_OPENBLAS_INSTALLATION=1
    export IGNORE_XZ_INSTALLATION=1
    export IGNORE_ALL_PIP_INSTALLATION=1
    export IGNORE_CMAKE_INSTALLATION=1
    export IGNORE_CPP_BOOST_INSTALLATION=1
    export IGNORE_CPP_ARMA_INSTALLATION=1
    export IGNORE_CPP_SPDLOG_INSTALLATION=1
    export IGNORE_C_INSTALLATION=1
    export IGNORE_FORTRAN_INSTALLATION=1
    
elif [ -n "${MINICONDA_INSTALLATION}" ]; then

    export PATH=$CONDA_PREFIX/bin:$PATH
    export LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH
    export LDFLAGS="-L$CONDA_PREFIX/lib":$LDFLAGS
    
    export CPLUS_INCLUDE_PATH=$CONDA_PREFIX/include/python3.7m/:$CPLUS_INCLUDE_PATH
    export C_INCLUDE_PATH=$CONDA_PREFIX/include/python3.7m/:$C_INCLUDE_PATH
    
    export CPLUS_INCLUDE_PATH=$CONDA_PREFIX/lib/python3.7/site-packages/numpy/core/include/:$CPLUS_INCLUDE_PATH
    export C_INCLUDE_PATH=$CONDA_PREFIX/lib/python3.7/site-packages/numpy/core/include:$C_INCLUDE_PATH

    export GLOBALPYTHON3=$CONDA_PREFIX/bin/python3
    export GLOBAL_PACKAGES_LOCATION=$CONDA_PREFIX

    export PYTHON_VERSION=3.7
    export PYTHONPATH=$CONDA_PREFIX/lib/python$PYTHON_VERSION/site-packages:$PYTHONPATH
    export PYTHONPATH=$CONDA_PREFIX/lib:$PYTHONPATH

    ulimit -s unlimited

    export FORTRAN_COMPILER=$CONDA_PREFIX/bin/x86_64-conda-linux-gnu-gfortran
    export C_COMPILER=$CONDA_PREFIX/bin/x86_64-conda-linux-gnu-cc
    export CXX_COMPILER=$CONDA_PREFIX/bin/x86_64-conda-linux-gnu-g++
    
    export MPI_FORTRAN_COMPILER=$CONDA_PREFIX/bin/mpif90
    export MPI_CXX_COMPILER=$CONDA_PREFIX/bin/mpicc
    export MPI_CC_COMPILER=$CONDA_PREFIX/bin/mpicxx

    export IGNORE_XZ_INSTALLATION=1
    export IGNORE_DISTUTILS_INSTALLATION=1
    export IGNORE_C_GSL_INSTALLATION=1
    export IGNORE_C_CFITSIO_INSTALLATION=1
    export IGNORE_C_FFTW_INSTALLATION=1
    export IGNORE_CPP_BOOST_INSTALLATION=1
    export IGNORE_CMAKE_INSTALLATION=1
    export IGNORE_OPENBLAS_INSTALLATION=1
    export IGNORE_FORTRAN_LAPACK_INSTALLATION=1
    export IGNORE_CPP_ARMA_INSTALLATION=1
fi

if [ -z "${IGNORE_CMAKE_INSTALLATION}" ]; then
    export CMAKE_ROOT=$ROOTDIR/.local/bin/cmake
    export CMAKE=$ROOTDIR/.local/bin/cmake
else
    export CMAKE=cmake
fi

if [ -n "${IGNORE_CPP_INSTALLATION}" ]; then
    export IGNORE_CPP_BOOST_INSTALLATION=1
    export IGNORE_CPP_ARMA_INSTALLATION=1
    export IGNORE_CPP_SPDLOG_INSTALLATION=1
    export IGNORE_CPP_CARMA_INSTALLATION=1
fi

if [ -n "${IGNORE_C_INSTALLATION}" ]; then
    export IGNORE_C_CFITSIO_INSTALLATION=1
    export IGNORE_C_FFTW_INSTALLATION=1
    export IGNORE_C_GSL_INSTALLATION=1
fi

if [ -n "${IGNORE_FORTRAN_INSTALLATION}" ]; then
    export IGNORE_FORTRAN_LAPACK_INSTALLATION=1
fi

if [ -n "${GLOBAL_PACKAGES_LOCATION}" ]; then
    export GLOBAL_PACKAGES_INCLUDE=$GLOBAL_PACKAGES_LOCATION/include
    export GLOBAL_PACKAGES_LIB=$GLOBAL_PACKAGES_LOCATION/lib
fi

if [ -z "${THREAD_UNXZ}" ]; then
    export MAKE_NUM_THREADS=1
fi

export PIP3=$ROOTDIR/.local/bin/pip$PYTHON_VERSION
export PYTHON3=$ROOTDIR/.local/bin/python$PYTHON_VERSION
export COBAYA_PACKAGES_PATH=external_modules

if [ -n "${COSMOLIKE_DEBUG_MODE}" ]; then
    export SPDLOG_LEVEL=debug
else
    export SPDLOG_LEVEL=info
fi
