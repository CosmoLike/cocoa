if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ENV VARIABLE ROOTDIR IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE CXX_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE C_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${CMAKE}" ]; then
    echo 'ERROR ENV VARIABLE MAKE IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${FORTRAN_COMPILER}" ]; then
    echo 'ERROR ENV VARIABLE FORTRAN_COMPILER IS NOT DEFINED' >&2
    return 1
fi
if [ -z "${MAKE_NUM_THREADS}" ]; then
    echo 'ERROR ENV VARIABLE MAKE_NUM_THREADS IS NOT DEFINED' >&2
    return 1
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# ------------------------------------- C PACKAGES -------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------

# --------------------------------------------------------------------------------------
# ---------------------------------------- FFTW ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_FFTW_INSTALLATION}" ]; then
  echo 'INSTALLING C FFTW LIBRARY - THIS MIGHT TAKE A WHILE'

  
  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_FFTW_DIR
  
  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --enable-openmp \
    --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW CONFIGURE RUN DONE"
    else
      echo "FFTW COULD NOT RUN CONFIGURE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW MAKE RUN DONE"
    else
      echo "FFTW COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "FFTW MAKE INSTALL RUN DONE"
    else
      echo "FFTW COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi
  else
    FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --enable-openmp \
    --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi

    make all
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi

    make install
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi
  fi

  cd $ROOTDIR
  echo 'INSTALLING C FFTW LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# --------------------------------------- CFITSIO --------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_CFITSIO_INSTALLATION}" ]; then
  echo 'INSTALLING C CFITSIO LIBRARY - THIS MIGHT TAKE A WHILE'

  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_CFITSIO_DIR

  rm -f CMakeCache.txt

  mkdir ./CFITSIOBUILD
  cd ./CFITSIOBUILD

  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_FC_COMPILER=FORTRAN_COMPILER --log-level=ERROR ..  > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO CMAKE RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN CMAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO MAKE RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "CFITSIO MAKE INSTALL RUN DONE"
    else
      echo "CFITSIO COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi
  else
    $CMAKE -DBUILD_SHARED_LIBS=TRUE -DCMAKE_INSTALL_PREFIX=$ROOTDIR/.local \
    -DCMAKE_C_COMPILER=$C_COMPILER -DCMAKE_CXX_COMPILER=$CXX_COMPILER \
    -DCMAKE_FC_COMPILER=FORTRAN_COMPILER ..
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi

    make all
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi

    make install
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi
  fi

  cd ../
  rm -rf ./CFITSIOBUILD

  cd $ROOTDIR
  echo 'INSTALLING C CFITSIO LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# ----------------------------------------- GSL ----------------------------------------
# --------------------------------------------------------------------------------------
if [ -z "${IGNORE_C_GSL_INSTALLATION}" ]; then
  echo 'INSTALLING C GSL LIBRARY - THIS MIGHT TAKE A WHILE'

  cd $ROOTDIR/../cocoa_installation_libraries/$COCOA_GSL_DIR

  if [ -z "${DEBUG_C_PACKAGES}" ]; then
    CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes \
    --enable-static=yes > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "GSL CONFIGURE RUN DONE"
    else
      echo "GSL COULD NOT RUN CONFIGURE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make -j $MAKE_NUM_THREADS all > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "GSL MAKE RUN DONE"
    else
      echo "GSL COULD NOT RUN MAKE - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ]; then
      echo "MAKE INSTALL GSL OK"
    else
      echo "GSL COULD NOT RUN MAKE INSTALL - CHECK SETUP_C_PACKAGES SCRIPT" >&2
      cd $ROOTDIR
      return 1
    fi
  else
    CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes \
    --enable-static=yes
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi

    make all
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi
    
    make install
    if [ $? -ne 0 ];then
      cd $ROOTDIR
      return 1
    fi
  fi

  cd $ROOTDIR
  echo 'INSTALLING C GSL LIBRARY - DONE'
fi

# --------------------------------------------------------------------------------------
# ----------------------------------- EUCLID EMU ---------------------------------------
# --------------------------------------------------------------------------------------

if [ -z "${DEBUG_PIP_OUTPUT}" ]; then
  export OUTPUT_PIP_1="/dev/null"
  export OUTPUT_PIP_2="/dev/null"
else
  export OUTPUT_PIP_1="/dev/tty"
  export OUTPUT_PIP_2="/dev/tty"
fi

# WE MIGRATED euclidemu2 TO setup_c_packages SCRIPT BECAUSE IT DEPENDS ON GSL-GNU LIB
env CXX=$CXX_COMPILER CC=$C_COMPILER  $PIP3 install --global-option=build_ext \
  $ROOTDIR/../cocoa_installation_libraries/euclidemu2-1.2.0 --no-dependencies \
  --prefix=$ROOTDIR/.local --no-index > ${OUTPUT_PIP_1} 2> ${OUTPUT_PIP_2}
if [ $? -ne 0 ]; then
  echo "PROBLEM PIP euclidemul"
  return 1
else
  echo "PIP euclidemul DONE"
fi

# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------
# --------------------------------------------------------------------------------------