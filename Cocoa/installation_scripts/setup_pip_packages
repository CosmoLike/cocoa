if [ -z "${ROOTDIR}" ]; then
    echo 'ERROR ROOTDIR not defined'
    return 1
fi
if [ -z "${CXX_COMPILER}" ]; then
    echo 'ERROR CXX_COMPILER not defined'
    return 1
fi
if [ -z "${C_COMPILER}" ]; then
    echo 'ERROR C_COMPILER not defined'
    return 1
fi
if [ -z "${PIP3}" ]; then
    echo 'ERROR PIP3 not defined'
    return 1
fi
if [ -z "${PYTHON3}" ]; then
    echo 'ERROR PIP3 not defined'
    return 1
fi

# ----------------------------------------------------------------------------
# LIBEXPAT - NUMPY CALLS IT
# ----------------------------------------------------------------------------
if [ -z "${IGNORE_ALL_PIP_INSTALLATION}" ]; then
  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    cd $ROOTDIR/../cocoa_installation_libraries/expat241
    
    FC=$FORTRAN_COMPILER CC=$C_COMPILER ./configure --prefix=$ROOTDIR/.local --enable-shared=yes --enable-static=yes > /dev/null 2> /dev/null

    make -j $MAKE_NUM_THREADS > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE INSTALL LIBEXPAT OK"
    else
      echo "LIBEXPAT COULD NOT MAKE INSTALL" >&2
      return 1
    fi

    make install > /dev/null 2> /dev/null
    if [ $? -eq 0 ] 
    then
      echo "MAKE INSTALL LIBEXPAT OK"
    else
      echo "LIBEXPAT COULD NOT MAKE INSTALL" >&2
      return 1
    fi

   cp $ROOTDIR/.local/lib/libexpat.so.1 $ROOTDIR/.local/lib/libexpat.so.0

   cd $ROOTDIR
  fi
fi

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
# -------------------------- PIP required packages ---------------------------
# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------
if [ -z "${IGNORE_ALL_PIP_INSTALLATION}" ]; then

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install setuptools --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP setuptools"
      return 1
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install six --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP six"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install $ROOTDIR/../cocoa_installation_libraries/pip_cache/wheel-0.37.0.tar.gz --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP wheel"
      return 1
    fi
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pip --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP pip"
      return 1
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install wget --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP wget"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install packaging --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP packaging"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install $ROOTDIR/../cocoa_installation_libraries/pip_cache/PGen-0.2.1.zip  --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP PGen"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install appdirs --upgrade --prefix=$ROOTDIR/.local --find-links  file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP appdirs"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install tokenizers --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP tokenizers"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install $ROOTDIR/../cocoa_installation_libraries/pip_cache/Cython-0.29.24.tar.gz  --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP Cython"
      return 1
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install requests --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP requests"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install urllib3 --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP urllib3"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install chardet --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP chardet"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pyparsing --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP pyparsing"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install certifi --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP certifi"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install idna --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP idna"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install python-dateutil --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP python-dateutil"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pytz --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP pytz"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
   if [ -z "${IGNORE_OPENBLAS_INSTALLATION}" ]; then
      echo "INSTALLING NUMPY (FROM SOURCE AND LOCAL OPENBLAS)"

      cd $ROOTDIR/../cocoa_installation_libraries/pip_cache/numpy-1.21.2-openblas
      
      cp site.cfg.example site.cfg
      sed --in-place --regexp-extended  "s@library_dirs(\s{1,})=(\s{1,})XXX@library_dirs = $ROOTDIR/.local/lib@g" site.cfg
      sed --in-place --regexp-extended  "s@include_dirs(\s{1,})=(\s{1,})XXX@include_dirs = $ROOTDIR/.local/include@g" site.cfg
      sed --in-place --regexp-extended  "s@runtime_library_dirs(\s{1,})=(\s{1,})XXX@runtime_library_dirs = $ROOTDIR/.local/lib@g" site.cfg

      env CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PYTHON3 setup.py build -j $MAKE_NUM_THREADS --force > /dev/null 2> /dev/null

      env CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PYTHON3 setup.py install --single-version-externally-managed --root=/ > /dev/null 2> /dev/null

      cd $ROOTDIR
    else
      env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install numpy --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install mpmath --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP mpmath"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install PyYAML --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP PyYAML"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install fuzzywuzzy --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index  
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP fuzzywuzzy"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install cycler --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP cycler"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install kiwisolver --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP kiwisolver"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pillow --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP pillow"
    return 1
  fi
  
  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pybind11 --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP pybind11"
    return 1
  fi
  
  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pythran --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP pythran"
    return 1
  fi
  
  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    if [ -z "${IGNORE_OPENBLAS_INSTALLATION}" ]; then
      echo "INSTALLING SCIPY (FROM SOURCE AND LOCAL OPENBLAS)"

      cd $ROOTDIR/../cocoa_installation_libraries/pip_cache/scipy-1.7.1-openblas

      cp site.cfg.example site.cfg
      sed --in-place --regexp-extended  "s@library_dirs(\s{1,})=(\s{1,})XXX@library_dirs = $ROOTDIR/.local/lib@g" site.cfg
      sed --in-place --regexp-extended  "s@include_dirs(\s{1,})=(\s{1,})XXX@include_dirs = $ROOTDIR/.local/include@g" site.cfg
      sed --in-place --regexp-extended  "s@runtime_library_dirs(\s{1,})=(\s{1,})XXX@runtime_library_dirs = $ROOTDIR/.local/lib@g" site.cfg

      env CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PYTHON3 setup.py config > /dev/null 2> /dev/null

      env C=$FORTRAN_COMPILER CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PYTHON3 setup.py build --fcompiler=gnu95 -j $MAKE_NUM_THREADS install --prefix $ROOTDIR/.local --force > /dev/null 2> /dev/null

      cd $ROOTDIR
    else
      env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install scipy --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install sympy --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP sympy"
    return 1
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install imageio --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index 
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP imageio"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    if [ -z "${IGNORE_OPENBLAS_INSTALLATION}" ]; then
      echo "INSTALLING PANDAS (FROM SOURCE AND LOCAL OPENBLAS)"

      cd $ROOTDIR/../cocoa_installation_libraries/pip_cache/pandas-1.3.3-openblas

      env CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PYTHON3 setup.py build_ext --inplace --force -j $MAKE_NUM_THREADS > /dev/null 2> /dev/null

      env CXX=$CXX_COMPILER CC=$C_COMPILER FC=$FORTRAN_COMPILER $PIP3 install -e . --no-build-isolation --no-use-pep517 --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index --force  > /dev/null 2> /dev/null
      
      cd $ROOTDIR
    else
      env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install pandas --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install ordered_set --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP ordered_set"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install mpi4py --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP mpi4py"
      return 1
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install py-bobyqa --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP py-bobyqa"
    return 1
  fi

  if [ -z "${MINICONDA_INSTALLATION}" ]; then
    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install matplotlib --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP matplotlib"
      return 1
    fi

    env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install astropy --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
    if [ $? -ne 0 ]; then
      echo "PROBLEM PIP astropy"
      return 1
    fi
  fi

  env CXX=$CXX_COMPILER CC=$C_COMPILER $PIP3 install GetDist --upgrade --prefix=$ROOTDIR/.local --find-links file:$ROOTDIR/../cocoa_installation_libraries/pip_cache --no-index
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP GetDist"
    return 1
  fi
  
  env CXX=$CXX_COMPILER CC=$C_COMPILER  $PIP3 install --global-option=build_ext $ROOTDIR/../cocoa_installation_libraries/euclidemu2-1.2.0 --upgrade  --no-dependencies --prefix=$ROOTDIR/.local --no-index > /dev/null 2> /dev/null  
  if [ $? -ne 0 ]; then
    echo "PROBLEM PIP syslibrary"
    return 1
  fi
fi

# PS: --no-index option prevent pip from using internet (forces to use our local cache)