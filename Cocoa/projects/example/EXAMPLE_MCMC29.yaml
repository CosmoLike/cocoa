stop_at_error: false
debug: false
timing: true

likelihood:
  sn.desy5: 
    path: ./external_modules/data/sn_data
  bao.desi_dr2.desi_bao_all:
    path: ./external_modules/data/ 

params:
  H0:
    prior:
      min: 55
      max: 90
    ref:
      dist: norm
      loc: 67
      scale: 2
    proposal: 0.001
    latex: H_0
  omegabh2:
    prior:
      min: 0.01
      max: 0.04
    ref:
      dist: norm
      loc: 0.022383
      scale: 0.005
    proposal: 0.005
    latex: \Omega_\mathrm{b} h^2
  omegach2:
    prior:
      min: 0.06
      max: 0.2
    ref:
      dist: norm
      loc: 0.12011
      scale: 0.03
    proposal: 0.03
    latex: \Omega_\mathrm{c} h^2
  omegaaxh2:
    prior:
      min: 0.02
      max: 0.4
    ref:
      dist: norm
      loc: 0.1
      scale: 0.1
    proposal: 0.05
    latex: \Omega_\mathrm{ax} h^2
  logmx:
    prior:
      min: -34
      max: -31.5
    ref:
      dist: norm
      loc: -33
      scale: 1
    proposal: 1
    latex: \log{m_{\rm ax}}
  mnu:
    value: 0.06
  omegamh2:
    derived: True
    value: 'lambda omegach2, omegabh2, mnu: omegach2+omegabh2+(mnu*(3.046/3)**0.75)/94.0708'
    latex: \Omega_\mathrm{m} h^2
  omegam:
    derived: True
    value: 'lambda omegamh2, H0: omegamh2/(H0/100)**2'
    latex: \Omega_\mathrm{m}
  rdrag:
    derived: True
    latex: r_\mathrm{drag}

theory:
  emulrdrag:
    path: ./cobaya/cobaya/theories/
    stop_at_error: True
    provides: ['rdrag']
    extra_args:
      file: ['external_modules/data/emultrf/BAO_SN_RES/axrdrag.joblib'] 
      extra: ['external_modules/data/emultrf/BAO_SN_RES/extrainfoaxrdrag.npy'] 
      ord: [['omegabh2','omegach2','H0','omegaaxh2','logmx']]
  emulbaosn:
    path: ./cobaya/cobaya/theories/
    stop_at_error: True
    extra_args:
      eval: [True, True] # dL(z), H(z),
      file:  ['external_modules/data/emultrf/BAO_SN_RES/chisquaredlreallogax.pt', 
              'external_modules/data/emultrf/BAO_SN_RES/chisquareHreallogax.pt']
      extra: ['external_modules/data/emultrf/BAO_SN_RES/extrainforealdlax.npy', 
              'external_modules/data/emultrf/BAO_SN_RES/extrainforealHax.npy']
      tmat:  ['external_modules/data/emultrf/BAO_SN_RES/PCArealdlax.npy', 
              'external_modules/data/emultrf/BAO_SN_RES/PCArealHax.npy']
      zlin:  ['external_modules/data/emultrf/BAO_SN_RES/zaxdl.npy',
              'external_modules/data/emultrf/BAO_SN_RES/zaxH.npy']       
      ord: [['omegam','H0','omegaaxh2','logmx'], 
            ['omegam','H0','omegaaxh2','logmx']]
      extrapar: [{'offset' : 0.0, 'INTDIM' : 4, 'NLAYER' : 4}, 
                 {'offset' : 0.0, 'INTDIM' : 1, 'NLAYER' : 1}]

sampler:
  mcmc:
    # ---------------------------------------------------------------------
    # File (w/ path) or matrix defining a covariance matrix for the proposal:
    # - null (default): will be generated from params info (prior and proposal)
    # - matrix: remember to set `covmat_params` to the parameters in the matrix
    covmat:
    covmat_params:
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Proposal covariance matrix learning
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    learn_proposal: True
    # Don't learn if convergence better than...
    learn_proposal_Rminus1_min: 0.035
    # Don't learn if convergence is worse than...
    learn_proposal_Rminus1_max: 4.
    # (even earlier if a param is not in the given covariance matrix)
    learn_proposal_Rminus1_max_early: 30.
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Convergence and stopping
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Maximum number of posterior evaluations
    max_samples: .inf
    Rminus1_stop: 0.01
    Rminus1_cl_stop: 0.12
    Rminus1_cl_level: 0.95
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Exploiting speed hierarchy
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    measure_speeds: True
    drag: False
    oversample_power: 0
    oversample_thin: True
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # Avoid chain getting suck forever
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    max_tries: 3000
    burn_in: 0
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # When no MPI used, number of fractions of the chain to compare
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    Rminus1_single_split: 4
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
    # ---------------------------------------------------------------------
      
output: ./projects/example/chains/EXAMPLE_MCMC29